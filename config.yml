
######################
# Sample Definitions #
######################

# input directory
sample_data_dir: "/scratch/bi03/heylf/Plamen/KIRO/Cl8_cells_FLASH"

clip_samples:
  #PTBP1_rep1: {r1: "ENCFF019TEQ", r2: "ENCFF689XJE"}
  #PTBP1_rep2: {r1: "ENCFF989UNR", r2: "ENCFF273VIJ"}
  #RBFOX2_rep1: {r1: "ENCFF172GUS", r2: "ENCFF647KDW"}
  #RBFOX2_rep2: {r1: "ENCFF591SSP", r2: "ENCFF289OFA"}
  #SLBP_rep1: {r1: "ENCFF192LYD", r2: "ENCFF929QLP"}
  #SLBP_rep2: {r1: "ENCFF835QFU", r2: "ENCFF833YXA"}
  #U2AF2_rep1: {r1: "ENCFF565HKG", r2: "ENCFF559BLA"}
  #U2AF2_rep2: {r1: "ENCFF912MAK", r2: "ENCFF440IJI"}
  # CL8
  Kiro_rep1: {r1: "Kiro_Cl8_Rb_XL10_rep1", r2: "Kiro_Cl8_Rb_XL10_rep1"}
  Kiro_rep2: {r1: "Kiro_Cl8_Rb_XL10_rep2", r2: "Kiro_Cl8_Rb_XL10_rep2"}
  # Kc
  #Kiro_rep1: {r1: "Kiro_Kc_Rb_XL11_rep1", r2: "Kiro_Kc_Rb_XL11_rep1"}
  #Kiro_rep2: {r1: "Kiro_Kc_Rb_XL11_rep2", r2: "Kiro_Kc_Rb_XL11_rep2"}

control_samples:
  #Input_rep1: {r1: "ENCFF905RDN", r2: "ENCFF960RXN"} # PTBP1
  #Input_rep1: {r1: "ENCFF264UQQ", r2: "ENCFF648TWD"} # RBFOX2
  #Input_rep1: {r1: "ENCFF494AAJ", r2: "ENCFF296EON"} # SLBP
  #Input_rep1: {r1: "ENCFF156ZDE", r2: "ENCFF939YLN"} # U2AF2
  # Cl8
  IgG_rep1: {r1: "IgG_Cl8_Rb_XL10_rep1", r2: "IgG_Cl8_Rb_XL10_rep1"}
  IgG_rep2: {r1: "IgG_Cl8_Rb_XL10_rep2", r2: "IgG_Cl8_Rb_XL10_rep2"}
  # Kc
  #IgG_rep1: {r1: "IgG_Kc_Rb_XL11_rep1", r2: "IgG_Kc_Rb_XL11_rep1"}
  #IgG_rep2: {r1: "IgG_Kc_Rb_XL11_rep2", r2: "IgG_Kc_Rb_XL11_rep2"}  

# Cl8
multiplex_setup: {r1: "bbmerged_XL10_S10_R1", r2: "bbmerged_XL10_S10_R2"}
# Kc
#multiplex_setup: {r1: "bbmerged_XL11_S11_R1", r2: "bbmerged_XL11_S11_R2"}

protocol: "FLASH"
paired: "yes"
control: "yes"
demultiplexed: "no"

# Peakcaller
peakcaller: "PureCLIP"
# peakcaller: "Piranha"
# peakcaller: "PEAKachu"
# peakcaller: "MACS2"
# peakcaller: "PanPeaker"

# Mapper
mapper: "STAR"    # recommended for CLIP-Seq
# mapper: "Bowtie2"   # recommended for ChIP-Seq

# give path to a file which provides
# barcodes for demultiplexing in a tabular form like:
# sample_1  barcode_1
# sample_2  barcode_2
# sample_3  barcode_3
barcodes: "/scratch/bi03/heylf/Plamen/KIRO/Cl8_cells_FLASH/barcodes.txt"

# genome directories
# hg19 
# ref_genome_dir: "/scratch/bi03/heylf/genomes/hg19"
# genome_fasta: "/GRCh37.p13.genome.fa" # UCSC
# genome_2bit: "/hg19.2bit"             # UCSC
# genome_gtf: "/Genocode_hg19.gtf"   
# genome_sizes: "/hg19_chr_sizes.txt"   # UCSC
# annotation_gtf: "/Genocode_hg19.gtf"
# hg38 
# ref_genome_dir: "/scratch/bi03/heylf/genomes/hg38"
# genome_fasta: "/hg38.fa"  # UCSC
# genome_2bit: "/hg38.2bit" # UCSC
# genome_gtf: "/Gencode.v29.all.gtf"    # Gencode
# genome_sizes: "/hg38.chrom.sizes.txt" # UCSC
# annotation_gtf: "/Gencode.v29.all.gtf"
# dm6 
ref_genome_dir: "/scratch/bi03/heylf/genomes/dm6"
genome_fasta: "/UCSC_edu_goldenPath_dm6_bigZips_dm6.fa"
genome_2bit: "/UCSC_edu_goldenPath_dm6_bigZips_dm6.2bit"
genome_gtf: "/UCSC_dm6.gtf"
genome_sizes: "/UCSC_edu_goldenPath_dm6_bigZips_dm6.chrom.sizes.txt"
annotation_gtf: "/UCSC_dm6.gtf"
# mm10
# ref_genome_dir: "/scratch/bi03/heylf/genomes/mm10"
# genome_fasta: "/mm10.fa"   # UCSC
# genome_2bit: "/mm10.2bit"  # UCSC
# genome_gtf: "/Gencode_MM_GRCm38.92.changedchrname.gtf" # Gencode
# genome_sizes: "/mm10_chr_sizes.txt" # UCSC
# annotation_gtf: "/Gencode_MM_GRCm38.92.changedchrname.gtf"

###############
# Directories #
###############

# output directories
renaming_outdir:  "renaming"
fastqc_beg_outdir:  "fastqc_beginning"
fastqc_adapt_outdir:  "fastqc_after_trimming"
cutadapt_outdir:  "cutadapt"
trim_galore_outdir: "trim_galore"
remove_tail_outdir: "remove_tail"
demulti_outdir: "demultiplexed"
mapping_outdir: "mapping"
mapping_quality_outdir: "mapping_quality"
preprocessing_for_umi_outdir: "preprocessing_for_umi"
deduplication_outdir: "deduplication"
fastqc_before_dedup_outdir:  "fastqc_before_deduplication"
fastqc_dedup_outdir:  "fastqc_after_deduplication"
coverage_outdir:  "coverage"
peakcalling_outdir:  "peakcalling"
post_processing_outdir: "post_processing"
robust_peak_search_outdir: "robust_peak_search"
motif_detection_outdir: "motif_detection"
motif_search_outdir: "motif_search"
matefilter_outdir:  "mate_filter"
multiqc_outdir:  "multiqc"
annotation_peaks_outdir: "annotation_peaks"
htseq_outdir: "htseq_count"
structure_predic_outdir: "structure_prediction"

# tool directories
bctools: "scripts"
rcas: "scripts"
extract_genomic_dna: "scripts"
find_robust_intersections: "scripts"
infer_experiment: "scripts"
panpeaker_script: "/scratch/bi03/heylf/PanPeaker"
dreme: "/scratch/bi01/heylf/miniconda3/bin"
stoatydive: "scripts/StoatyDive"

# conda environment directory 
conda_envs: "../../envs"
# subworkflows
rules: "rules"

################
# TOOL OPTIONS #
################

### CUTADAPT ###
# PARCLIP
# cutadapt: &cutadapt "--error-rate=0.1 --times=1 --overlap=5 -m 20 -a TCGTATGCCGTCTTCTGCTTG"
# cutadapt: &cutadapt "--error-rate=0.1 --times=1 --overlap=5 -m 20 -a TGGAATTCTCGGGTGCCAAGG"

# FLASH
cutadapt: &cutadapt >-
              --error-rate=0.1 --times=1 --overlap=5 -m 20 
              -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG 
              -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT

# eCLIP
# cutadapt: &cutadapt >-
#               --error-rate=0.1 --times=1 --overlap=5 -m 20 
#               -a NNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -g CTTCCGATCTACAAGTT -g CTTCCGATCTTGGTCCT -A AACTTGTAGATCGGA 
#               -A AGGACCAAGATCGGA -A ACTTGTAGATCGGAA -A GGACCAAGATCGGAA -A CTTGTAGATCGGAAG 
#               -A GACCAAGATCGGAAG -A TTGTAGATCGGAAGA -A ACCAAGATCGGAAGA -A TGTAGATCGGAAGAG 
#               -A CCAAGATCGGAAGAG -A GTAGATCGGAAGAGC -A CAAGATCGGAAGAGC -A TAGATCGGAAGAGCG 
#               -A AAGATCGGAAGAGCG -A AGATCGGAAGAGCGT -A GATCGGAAGAGCGTC -A ATCGGAAGAGCGTCG 
#               -A TCGGAAGAGCGTCGT -A CGGAAGAGCGTCGTG -A GGAAGAGCGTCGTGT

### REMOVE_TAIL ###
# arbitrary
# remove_tail: &remove_tail "0"
# FLASH
remove_tail: &remove_tail "13"
# eCLIP N5
# remove_tail: &remove_tail "5"
# eCLIP N10
# remove_tail: &remove_tail "10"

### UMI_TOOLS ###
# N marks the sequences that will be cut out
# X marks the sequences that will be left in the reads
# FLASH NNBBNTTTTTTNN (N = random tag, B = binary replicate barcode, T = multplex experiment barcode)
got_umis_1: &got_umis_1 "-p NNXXNXXXXXXNN"
got_umis_2: &got_umis_2 "-p NNNNNN"
umi_dedup: &umi_dedup "--random-seed 0 --extract-umi-method read_id --method adjacency --edit-distance-threshold 1 --soft-clip-threshold 4 --subset 1.0 --paired"

### DEMULTIPLEXING ###
# FLASH
demultiplex: &demultiplex >-
              SAME_HEADERS=false BPOS=READ_2 BCLEN=8 C=true ADD=false MM=1 MMD=1 Q=10 QUALITY_FORMAT=Standard XT=0 ZT=0 RCHAR=: GZ=false 
              KEEP_UNASSIGNED_READ=false STATS_ONLY=false

################
### Mapping  ###
################

### STAR ###
star_all: &star_all >-
    --outSAMtype BAM SortedByCoordinate --outSAMattributes All --outSAMstrandField intronMotif --outFilterIntronMotifs None --outSAMunmapped None 
    --outSAMprimaryFlag OneBestScore --outSAMmapqUnique '255' --outFilterType Normal --outFilterMultimapScoreRange '1' --outFilterMultimapNmax '10'
    --outFilterMismatchNmax '10' --outFilterMismatchNoverLmax '0.3' --outFilterMismatchNoverReadLmax '1.0' --outFilterScoreMin '0'
    --outFilterMatchNmin '0' --seedSearchStartLmax '50' --seedSearchStartLmaxOverLread '1.0' --seedSearchLmax '0' 
    --seedMultimapNmax '10000' --seedPerReadNmax '1000' --seedPerWindowNmax '50' --seedNoneLociPerWindow '10'  --alignIntronMin '21' --alignIntronMax '0' 
    --alignSJoverhangMin '5' --alignSJDBoverhangMin '3' --alignSplicedMateMapLmin '0' --alignSplicedMateMapLminOverLmate '0.66'  
    --alignWindowsPerReadNmax '10000' --alignTranscriptsPerWindowNmax '100' --alignTranscriptsPerReadNmax '10000' --alignEndsType EndToEnd  --twopassMode 'Basic' 
    --twopass1readsN '-1' --limitBAMsortRAM '0' --limitOutSJoneRead '1000' --limitOutSJcollapsed '1000000' --limitSjdbInsertNsj '1000000' 
# long reads 
# star_indi: &star_indi "--outFilterScoreMinOverLread '0.66' --outFilterMatchNminOverLread '0.66'"
# small reads 
star_indi: &star_indi "--outFilterScoreMinOverLread '0.3' --outFilterMatchNminOverLread '0.3'"
# fragment size does not matter
star_frag: &star_frag "--alignMatesGapMax '0'"
# fragment size does matter (for MACS2)
# star_frag: &star_frag "--alignMatesGapMax '999'"

### Bowtie2 ###
# -X --> maximum fragment length (important for MACS2)
# --fr --> forward reverse orientation
bowtie2: &bowtie2 "--end-to-end -X 999 --fr --seed 123"

#######################
### Mapping Quality ###
#######################

gc_bias: &gc_bias "--fragmentLength 300 --effectiveGenomeSize 2451960000"
fingerprint: &fingerprint "--binSize 100"
multiBamSummary: &multiBamSummary "--binSize '1000' --distanceBetweenBins '0'"
plotCorrelation: &plotCorrelation >-
                    --corMethod 'spearman' --whatToPlot 'heatmap' --colorMap 'RdYlBu'  
                    --plotTitle '' --plotWidth 11.0 --plotHeight 9.5  --plotFileFormat 'png'
estimate_insert_size: &estimate_insert_size >-
                      DEVIATIONS='10.0' MINIMUM_PCT='0.05' ASSUME_SORTED='false' 
                      METRIC_ACCUMULATION_LEVEL='ALL_READS'  VALIDATION_STRINGENCY='LENIENT' QUIET=true VERBOSITY=ERROR

####################
### Peak calling ###
####################

### PURECLIP ###
# hg19/hg38
# pureclip: &pureclip "-iv 'chr1;chr2;chr3;'"
# pureclip: &pureclip "-bdw 10 -bdwn 10 -iv 'chr1;chr2;chr3;'"
# dm6 (small binding regions)
pureclip: &pureclip "-bdw 5 -bdwn 5 -ld -antp"
# mm10 
# pureclip: &pureclip "-bdw 50 -bdwn 50 -antp -ld -iv 'chr1;chr2;chr3;'"

### PIRANHA ###
# dm6
# piranha: &piranha "-s -p 0.05  -b 10 -i 10 -u 10 -d Poisson"
# hg19/hg38
piranha: &piranha "-s -p 0.05 -b 50 -i 50 -u 10"

### PEAKACHU ###
# see my note to --pairwise_replicates 
peakachu: &peakachu >-
          --max_insert_size 200 --features '' --sub_features '' --min_cluster_expr_frac 0.01 --min_block_overlap 0.5 --min_max_block_expr 0.1 
          --norm_method deseq --mad_multiplier 0.0 --fc_cutoff 2.0 --padj_threshold 0.05 --pairwise_replicates 

### MACS2 ###
# hg18/19 etc. --> -g hs
# mm10 etc. --> mm
# Q-values are calculated from p-values using Benjamini-Hochberg procedure.
# regular peaks (from https://github.com/taoliu/MACS)
macs2: &macs2 "-g mm -B -p 0.05 --call-summits --slocal 1000 --llocal 10000" # default
# braod peaks (from https://github.com/taoliu/MACS)
# macs2: &macs2 "--broad -g mm --broad-cutoff 0.05"

# If AssertionError: slocal can't be smaller than d! ---> (https://github.com/taoliu/MACS/issues/171)
# You used the default slocal value 1000bp. Your mean fragment length (d)
# is 1109bp. That's why it complains "slocal can't be smaller than d!". I
# think you can get through by setting --slocal to a value larger than
# 1109, eg. 2000.

### PANPEAKER ###
panpeaker: &panpeaker >-
            --piranha "\"-s -p 0.05 -b 50 -i 50 -u 10\"" --pureclip "\"-iv 'chr1;chr2;chr3;'\"" --seed 123

##########################
### After peak calling ###
##########################

### Extract CL ###
# eCLIP
#extract_cl: &extract_cl "--threeprime"
# FLASH
extract_cl: &extract_cl ""

peaks_extend_frontiers: &peaks_extend_frontiers "-header -b 20"
meme_chip: &meme_chip >-
            -norc -order 1 -group-thresh 0.05 -group-weak 0.0 -filter-thresh 0.05  -meme-mod zoops -meme-minw 5 -meme-maxw 20 -meme-nmotifs 20  
            -dreme-e 0.05 -dreme-m 20 -spamo-skip -fimo-skip -noecho -rna -seed 123 -centrimo-maxreg 100 -centrimo-local
fimo: &fimo "--alpha 1.000000 --max-stored-scores 100000 --motif-pseudo 0.100000 --qv-thresh --thresh 0.000100 --verbosity 1"
annotation: &annotation "-s -u"
rnafold: &rnafold "-p --MEA -d2 --noPS"
orientation: &orientation "--sample-size 200000 --mapq 30"
stoatydive_para: &stoatydive_para "--length_norm --border_penalty --scale_max 10.0 --seed 123"
stoatydive_para2: &stoatydive_para2 "--border_penalty --seed 123"

### RCAS ###
# hg19
rcas_params: &rcas_params "hg19"
